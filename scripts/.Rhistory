annotation_north_arrow(location = "bl", which_north = "true", pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"), style = north_arrow_fancy_orienteering) + #To add an arrow showing the north direction
xlab("") + ylab ("") +
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed", size = 0.5), panel.background = element_rect(fill = "white")) + #To set the colors of the map
geom_point(data=Comitan, aes(Longitud, Latitud), col="#662497") + #To plot each area with a different color
geom_point(data=Cuicatlan, aes(Longitud, Latitud), col="red") +
geom_point(data=EDO.CUE, aes(Longitud, Latitud), col="orange")+
geom_point(data=San_Cristobal, aes(Longitud, Latitud), col="#2daa71")+
geom_point(data=Tuxtla, aes(Longitud, Latitud), col="#e947c2") +
geom_point(data = Xalalpa, aes(Longitud, Latitud), col="blue")
dfMexicoRegion %>%
ggplot()+
geom_sf() +
coord_sf(xlim=c(-101,-89.5), ylim=c(14,22.7), expand = FALSE) + #To define the map limitation
annotation_scale(location = "bl", width_hint = 0.5) + #To add a scale bar
annotation_north_arrow(location = "bl", which_north = "true", pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"), style = north_arrow_fancy_orienteering) + #To add an arrow showing the north direction
xlab("") + ylab ("") +
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed", size = 0.5), panel.background = element_rect(fill = "white")) + #To set the colors of the map
geom_point(data=Comitan, aes(Longitud, Latitud), col="brown") + #To plot each area with a different color
geom_point(data=Cuicatlan, aes(Longitud, Latitud), col="red") +
geom_point(data=EDO.CUE, aes(Longitud, Latitud), col="orange")+
geom_point(data=San_Cristobal, aes(Longitud, Latitud), col="#2daa71")+
geom_point(data=Tuxtla, aes(Longitud, Latitud), col="#e947c2") +
geom_point(data = Xalalpa, aes(Longitud, Latitud), col="blue")
#to charge folder needed
popFolder <- read.csv('../meta/eduleTareafinal_pop.txt', sep='\t', header = TRUE)
idFolder <- read.csv('../data/edule_ind.txt', header = FALSE)
vcfFolder <- read.vcfR("../data/edule_2allel_MAF5_missing20_HWE5.recode.vcf", verbose = FALSE)
source("HeatmapFST.R")
```{r echo=FALSE, results='hide'}
```{r echo=FALSE, results=hide}
```{r echo=FALSE}
```{r echo=FALSE, results=FALSE}
```{r echo=FALSE, message=FALSE}
```{r echo=FALSE, message=FALSE}
#To plot a pairwise FSTs according to Nei (1987)
#Packages needed:
library(vcfR)
library(adegenet)
library(hierfstat)
#to charge folder needed
popFolder <- read.csv('../meta/eduleTareafinal_pop.txt', sep='\t', header = TRUE)
idFolder <- read.csv('../data/edule_ind.txt', header = FALSE)
vcfFolder <- read.vcfR("../data/edule_2allel_MAF5_missing20_HWE5.recode.vcf", verbose = FALSE)
#To convert in genind folder
gdFolder <- vcfR2genind(vcfFolder, return.alleles = TRUE)
gdFolder @pop <- as.factor(popFolder$Area) #this step is to define which column will be taken as a population
gdFolder  #to check if @pop was added
gdFolder$pop  #to check the number of population, the name of population.
#To estimates pairwise FSTs according to Nei (1987)
gdFolder.fstat <- genind2hierfstat(gdFolder)
gdFolder_fst.mat <-pairwise.neifst(gdFolder.fstat)
gdFolder_fst.mat
# To plot the FST
heatmap(gdFolder_fst.mat,col=rev(heat.colors(100)), symm= TRUE, cexRow =1.1, cexCol = 0.9)
#Add the name of the folder ".frq"
ParamFolder <- "Comitan"
MyFolder <- paste0("../data/",ParamFolder,".frq")
#Add the name of the folder ".frq"
ParamFolder <- "Comitan"
MyFolder <- paste0("../data/",ParamFolder,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frq <-read.delim(MyFolder,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frq2 <- separate(data = folder.frq,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
#Packages needed:
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
#Add the name of the folder ".frq"
ParamFolder <- "Comitan"
MyFolder <- paste0("../data/",ParamFolder,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frq <-read.delim(MyFolder,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frq2 <- separate(data = folder.frq,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frq2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolder, x="Minor allele frequency", y="Percentage") +
theme_bw()
g1
#Add the name of the folder ".frq"
ParamFolderA <- "Comitan"
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frq2A, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frq2A, aes(x=ALLE2.frqA)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frq2A, aes(x=ALLE2.frq2A)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolder, x="Minor allele frequency", y="Percentage") +
theme_bw()
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
g1
ParamFolderB <- "edule_edule"
MyFolderB <- paste0("../data/",ParamFolderB,".frq")
folder.frqB <-read.delim(MyFolderB,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
folder.frqB2 <- separate(data = folder.frqB,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
g2 <-ggplot(folder.frqB2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderB, x="Minor allele frequency", y="Percentage") +
theme_bw()
g2
g3 <- grid.arrange(g1, g2, nrow = 1)
setwd("C:/Users/Cecile/Desktop/GBSsechium/archive/outgroup")
#Add the name of the folder ".frq"
ParamFolderA <- "edule_outg"
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
setwd("C:/Users/Cecile/Desktop/GBSsechium/scripts")
#Add the name of the folder ".frq"
ParamFolderA <- "edule_outg"
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
ParamFolderB <- "edule_edule"
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
g1
#Add the name of the folder ".frq"
ParamFolderA <- "edule_outg"
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
ParamFolderB <- "edule_edule"
MyFolderB <- paste0("../data/",ParamFolderB,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
folder.frqB <-read.delim(MyFolderB,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
folder.frqB2 <- separate(data = folder.frqB,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
g2 <-ggplot(folder.frqB2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderB, x="Minor allele frequency", y="Percentage") +
theme_bw()
g3 <- grid.arrange(g1, g2, nrow = 1)
#Change language settings in English (to get error/comment messages in English).
Sys.setenv(LANG = "en")
#Packages needed:
library("sf")
library("ggspatial")
library("raster")
library("ggrepel")
library("dplyr")
#To charge the folder with the area/population with the localisation (latitud, longitud).
BE_pop <- read.csv('../meta/eduleTareafinal_pop.txt', sep='\t', header = TRUE)
#To define each area, and it is the opportunity to rename the area with a shorter name.
Comitan <- filter(BE_pop, Area=="Comitan")
Cuicatlan <- filter(BE_pop, Area=="Cuicatlan")
EDO.CUE <- filter(BE_pop, Area=="EDO CUE")
San_Cristobal <- filter(BE_pop, Area=="San Cristobal")
Tuxtla <- filter(BE_pop, Area=="Tuxtla G.")
Xalalpa <- filter(BE_pop, Area=="Xalapa")
#To plot the Mexican map
dfMexicoRegion <- getData("GADM", country = "MEXICO", level = 1) %>% st_as_sf()
dfMexicoRegion %>%
ggplot()+
geom_sf() +
coord_sf(xlim=c(-101,-89.5), ylim=c(14,22.7), expand = FALSE) + #To define the map limitation
annotation_scale(location = "bl", width_hint = 0.5) + #To add a scale bar
annotation_north_arrow(location = "bl", which_north = "true", pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"), style = north_arrow_fancy_orienteering) + #To add an arrow showing the north direction
xlab("") + ylab ("") +
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed", size = 0.5), panel.background = element_rect(fill = "white")) + #To set the colors of the map
geom_point(data=Comitan, aes(Longitud, Latitud), col="brown") + #To plot each area with a different color
geom_point(data=Cuicatlan, aes(Longitud, Latitud), col="red") +
geom_point(data=EDO.CUE, aes(Longitud, Latitud), col="orange")+
geom_point(data=San_Cristobal, aes(Longitud, Latitud), col="#2daa71")+
geom_point(data=Tuxtla, aes(Longitud, Latitud), col="#e947c2") +
geom_point(data = Xalalpa, aes(Longitud, Latitud), col="blue")
#To plot a pairwise FSTs according to Nei (1987)
#Packages needed:
library(vcfR)
library(adegenet)
library(hierfstat)
#to charge folder needed
popFolder <- read.csv('../meta/eduleTareafinal_pop.txt', sep='\t', header = TRUE)
idFolder <- read.csv('../data/edule_ind.txt', header = FALSE)
vcfFolder <- read.vcfR("../data/edule_2allel_MAF5_missing20_HWE5.recode.vcf", verbose = FALSE)
#To convert in genind folder
gdFolder <- vcfR2genind(vcfFolder, return.alleles = TRUE)
gdFolder @pop <- as.factor(popFolder$Area) #this step is to define which column will be taken as a population
gdFolder  #to check if @pop was added
gdFolder$pop  #to check the number of population, the name of population.
#To estimates pairwise FSTs according to Nei (1987)
gdFolder.fstat <- genind2hierfstat(gdFolder)
gdFolder_fst.mat <-pairwise.neifst(gdFolder.fstat)
gdFolder_fst.mat
#Add the name of the folder ".frq"
ParamFolderA <- "SanCristobal_outg"
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
ParamFolderB <- "SanCristobal"
MyFolderB <- paste0("../data/",ParamFolderB,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
folder.frqB <-read.delim(MyFolderB,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
folder.frqB2 <- separate(data = folder.frqB,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
g2 <-ggplot(folder.frqB2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderB, x="Minor allele frequency", y="Percentage") +
theme_bw()
g3 <- grid.arrange(g1, g2, nrow = 1)
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
ParamFolderB <- "edule_edule"
MyFolderB <- paste0("../data/",ParamFolderB,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
folder.frqB <-read.delim(MyFolderB,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
folder.frqB2 <- separate(data = folder.frqB,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
g2 <-ggplot(folder.frqB2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderB, x="Minor allele frequency", y="Percentage") +
theme_bw()
g3 <- grid.arrange(g1, g2, nrow = 1)
#Packages needed:
library(ggplot2)
library(tidyr)
library(dplyr)
library(gridExtra)
#Add the name of the folder ".frq"
ParamFolderA <- "Comitan"
MyFolderA <- paste0("../data/",ParamFolderA,".frq")
ParamFolderB <- "edule_edule"
MyFolderB <- paste0("../data/",ParamFolderB,".frq")
#To charge the folder with: read.delim()
#skip=1, to skip the first line of the folder
#header = FALSE, to remove the header of the folder,
#col.names = c(…), to add new column names manually.
folder.frqA <-read.delim(MyFolderA,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
folder.frqB <-read.delim(MyFolderB,
skip=1,
header=FALSE,
col.names = c("CHROM",	"POS",	"N_ALLELES",	"N_CHR", "ALLE1", "ALLE2"))
#Use “separate” to split a column into two,
#col=,to select the column to split,
#into=c(), to create the new columns with new names,
#sep=, to select the element of separation.
#mutate(), to convert character values as a numeric.
#%>%, to connect multiple functions into a single command.
folder.frqA2 <- separate(data = folder.frqA,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
folder.frqB2 <- separate(data = folder.frqB,
col=ALLE1,
into=c("ALLE1", "ALLE1.frq"),
sep= ":") %>%
separate(col=ALLE2,
into=c("ALLE2", "ALLE2.frq"),
sep= ":") %>%
mutate(., ALLE1.frq= as.numeric(ALLE1.frq)) %>%
mutate(., ALLE2.frq= as.numeric(ALLE2.frq))
##To graph the minor allele (number 2)
g1 <-ggplot(folder.frqA2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderA, x="Minor allele frequency", y="Percentage") +
theme_bw()
g2 <-ggplot(folder.frqB2, aes(x=ALLE2.frq)) +
geom_histogram(aes(y=(..count..)/sum(..count..))) +
labs(title = ParamFolderB, x="Minor allele frequency", y="Percentage") +
theme_bw()
g3 <- grid.arrange(g1, g2, nrow = 1)
